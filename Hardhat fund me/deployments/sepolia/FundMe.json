{
  "address": "0x357fBe3b97633Bf14e67F2386AB149c5F6cF9085",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "adressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf588548e9e2caa84576125da74fe6c06b2d9d378afae8d53b78fc07be33a8355",
  "receipt": {
    "to": null,
    "from": "0x83DD842BB14aacE72A1a68a129D134Ee3EeBbbd4",
    "contractAddress": "0x357fBe3b97633Bf14e67F2386AB149c5F6cF9085",
    "transactionIndex": 86,
    "gasUsed": "885442",
    "logsBloom": "0x
    "blockHash": "0x4f591b0c4a6e67a0afc2fd8c02d50e36fe030edad282b9c1842e022e39576777",
    "transactionHash": "0xf588548e9e2caa84576125da74fe6c06b2d9d378afae8d53b78fc07be33a8355",
    "logs": [],
    "blockNumber": 5753670,
    "cumulativeGasUsed": "8940253",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "f7b459cb296d8622bbcc9b0392fe13c2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"adressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"SAc\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A conytract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"THis function funds this contract\"}},\"notice\":\"demo sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConvertor.sol\\\";\\n\\nerror FundMe_NotOwner();\\n/** @title A conytract for crowd funding\\n*   @author SAc\\n*   @notice demo sample funding contract\\n*   @dev This implements price feeds as our library\\n*/\\n\\ncontract FundMe{\\n    // Type Declaration\\n    using PriceConvertor for uint256;\\n\\n    //State declaration\\n    mapping(address => uint256) public adressToAmountFunded;\\n    uint256 public minimumUsd = 10 * 1e18;\\n    address[] public funders;\\n    address public owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n\\n    modifier onlyOwner {\\n        // require(owner == msg.sender, \\\"Sender is not owner\\\");\\n        if(msg.sender != owner) revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    // functions orders;\\n    // contructor\\n    // receive\\n    // fallback\\n    // external\\n    // public\\n    // internal\\n    // private\\n    // view / pure\\n\\n    constructor(address priceFeedAddress){\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    \\n    receive() external payable{\\n\\n    }\\n\\n    fallback() external payable{\\n        \\n    }\\n\\n    /**\\n    *   @notice THis function funds this contract\\n    *   @dev This implements price feeds as our library\\n    */\\n\\n    function fund() public payable{\\n        require(msg.value.getConvertedPrice(priceFeed) >= minimumUsd, \\\"Required minimum 10Usd\\\");\\n        funders.push(msg.sender);\\n        adressToAmountFunded[msg.sender] = msg.value;\\n    }   \\n\\n    function withdraw() public {\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funderAddress = funders[funderIndex];\\n            adressToAmountFunded[funderAddress] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        (bool callSuccess,) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Tx failed\\\");\\n    }\\n\\n}\",\"keccak256\":\"0x04caacdc149a6fcc34afe32581e350639934dfe6977640c25e5e731bcb418019\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor{\\n    function getPrice(AggregatorV3Interface _priceFeed) internal view returns (uint256) {\\n        (,int256 amount,,,) = _priceFeed.latestRoundData();\\n        return uint256(amount / 1 * 1e10); \\n    }\\n\\n    function getConvertedPrice(uint256 _ethAmount,AggregatorV3Interface priceFeed) internal view returns (uint256){\\n        uint256 feedPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSd = (_ethAmount * feedPrice) / 1e18;\\n        return ethAmountInUSd;\\n    }\\n}\",\"keccak256\":\"0x603daef98d367ce04c82138d94178361dfaea61d49e978c7a7accec8b3f51154\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052678ac7230489e8000060015534801561001c57600080fd5b50604051610f37380380610f37833981810160405281019061003e91906100db565b33600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610156565b6000815190506100d58161013f565b92915050565b6000602082840312156100f1576100f061013a565b5b60006100ff848285016100c6565b91505092915050565b60006101138261011a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61014881610108565b811461015357600080fd5b50565b610dd2806101656000396000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100fc5780638da5cb5b14610127578063b60d428814610152578063dc0d3dff1461015c5761007b565b8063098de8201461007d5780633ccfd60b146100a857806355f2a7d5146100bf5761007b565b3661007b57005b005b34801561008957600080fd5b50610092610199565b60405161009f919061090c565b60405180910390f35b3480156100b457600080fd5b506100bd61019f565b005b3480156100cb57600080fd5b506100e660048036038101906100e19190610716565b61035a565b6040516100f3919061090c565b60405180910390f35b34801561010857600080fd5b50610111610372565b60405161011e91906108b1565b60405180910390f35b34801561013357600080fd5b5061013c610398565b6040516101499190610896565b60405180910390f35b61015a6103be565b005b34801561016857600080fd5b50610183600480360381019061017e9190610743565b6104df565b6040516101909190610896565b60405180910390f35b60015481565b60005b60028054905081101561024a576000600282815481106101c5576101c4610c88565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061024290610be1565b9150506101a2565b50600067ffffffffffffffff81111561026657610265610cb7565b5b6040519080825280602002602001820160405280156102945781602001602082028036833780820191505090505b50600290805190602001906102aa929190610606565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516102d190610881565b60006040518083038185875af1925050503d806000811461030e576040519150601f19603f3d011682016040523d82523d6000602084013e610313565b606091505b5050905080610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e906108cc565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001546103f6600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461051e90919063ffffffff16565b1015610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e906108ec565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600281815481106104ef57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061052a8361055a565b90506000670de0b6b3a764000082866105439190610af5565b61054d91906109ad565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105a357600080fd5b505afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db9190610770565b5050509150506402540be4006001826105f49190610943565b6105fe91906109de565b915050919050565b82805482825590600052602060002090810192821561067f579160200282015b8281111561067e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610626565b5b50905061068c9190610690565b5090565b5b808211156106a9576000816000905550600101610691565b5090565b6000813590506106bc81610d40565b92915050565b6000815190506106d181610d57565b92915050565b6000813590506106e681610d6e565b92915050565b6000815190506106fb81610d6e565b92915050565b60008151905061071081610d85565b92915050565b60006020828403121561072c5761072b610ce6565b5b600061073a848285016106ad565b91505092915050565b60006020828403121561075957610758610ce6565b5b6000610767848285016106d7565b91505092915050565b600080600080600060a0868803121561078c5761078b610ce6565b5b600061079a88828901610701565b95505060206107ab888289016106c2565b94505060406107bc888289016106ec565b93505060606107cd888289016106ec565b92505060806107de88828901610701565b9150509295509295909350565b6107f481610b4f565b82525050565b61080381610bab565b82525050565b6000610816600983610932565b915061082182610ceb565b602082019050919050565b6000610839600083610927565b915061084482610d14565b600082019050919050565b600061085c601683610932565b915061086782610d17565b602082019050919050565b61087b81610b8b565b82525050565b600061088c8261082c565b9150819050919050565b60006020820190506108ab60008301846107eb565b92915050565b60006020820190506108c660008301846107fa565b92915050565b600060208201905081810360008301526108e581610809565b9050919050565b600060208201905081810360008301526109058161084f565b9050919050565b60006020820190506109216000830184610872565b92915050565b600081905092915050565b600082825260208201905092915050565b600061094e82610b61565b915061095983610b61565b92508261096957610968610c59565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156109a2576109a1610c2a565b5b828205905092915050565b60006109b882610b8b565b91506109c383610b8b565b9250826109d3576109d2610c59565b5b828204905092915050565b60006109e982610b61565b91506109f483610b61565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a3357610a32610c2a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610a7057610a6f610c2a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610aad57610aac610c2a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610aea57610ae9610c2a565b5b828202905092915050565b6000610b0082610b8b565b9150610b0b83610b8b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4457610b43610c2a565b5b828202905092915050565b6000610b5a82610b6b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610bb682610bbd565b9050919050565b6000610bc882610bcf565b9050919050565b6000610bda82610b6b565b9050919050565b6000610bec82610b8b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c1f57610c1e610c2a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5478206661696c65640000000000000000000000000000000000000000000000600082015250565b50565b7f5265717569726564206d696e696d756d20313055736400000000000000000000600082015250565b610d4981610b4f565b8114610d5457600080fd5b50565b610d6081610b61565b8114610d6b57600080fd5b50565b610d7781610b8b565b8114610d8257600080fd5b50565b610d8e81610b95565b8114610d9957600080fd5b5056fea26469706673582212202901e9a8052cb41a2dfe8e00b50ed4037df01afae37bd2fc63760bde50c0c19e64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100fc5780638da5cb5b14610127578063b60d428814610152578063dc0d3dff1461015c5761007b565b8063098de8201461007d5780633ccfd60b146100a857806355f2a7d5146100bf5761007b565b3661007b57005b005b34801561008957600080fd5b50610092610199565b60405161009f919061090c565b60405180910390f35b3480156100b457600080fd5b506100bd61019f565b005b3480156100cb57600080fd5b506100e660048036038101906100e19190610716565b61035a565b6040516100f3919061090c565b60405180910390f35b34801561010857600080fd5b50610111610372565b60405161011e91906108b1565b60405180910390f35b34801561013357600080fd5b5061013c610398565b6040516101499190610896565b60405180910390f35b61015a6103be565b005b34801561016857600080fd5b50610183600480360381019061017e9190610743565b6104df565b6040516101909190610896565b60405180910390f35b60015481565b60005b60028054905081101561024a576000600282815481106101c5576101c4610c88565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061024290610be1565b9150506101a2565b50600067ffffffffffffffff81111561026657610265610cb7565b5b6040519080825280602002602001820160405280156102945781602001602082028036833780820191505090505b50600290805190602001906102aa929190610606565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516102d190610881565b60006040518083038185875af1925050503d806000811461030e576040519150601f19603f3d011682016040523d82523d6000602084013e610313565b606091505b5050905080610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e906108cc565b60405180910390fd5b50565b60006020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001546103f6600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461051e90919063ffffffff16565b1015610437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042e906108ec565b60405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600281815481106104ef57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061052a8361055a565b90506000670de0b6b3a764000082866105439190610af5565b61054d91906109ad565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105a357600080fd5b505afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db9190610770565b5050509150506402540be4006001826105f49190610943565b6105fe91906109de565b915050919050565b82805482825590600052602060002090810192821561067f579160200282015b8281111561067e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610626565b5b50905061068c9190610690565b5090565b5b808211156106a9576000816000905550600101610691565b5090565b6000813590506106bc81610d40565b92915050565b6000815190506106d181610d57565b92915050565b6000813590506106e681610d6e565b92915050565b6000815190506106fb81610d6e565b92915050565b60008151905061071081610d85565b92915050565b60006020828403121561072c5761072b610ce6565b5b600061073a848285016106ad565b91505092915050565b60006020828403121561075957610758610ce6565b5b6000610767848285016106d7565b91505092915050565b600080600080600060a0868803121561078c5761078b610ce6565b5b600061079a88828901610701565b95505060206107ab888289016106c2565b94505060406107bc888289016106ec565b93505060606107cd888289016106ec565b92505060806107de88828901610701565b9150509295509295909350565b6107f481610b4f565b82525050565b61080381610bab565b82525050565b6000610816600983610932565b915061082182610ceb565b602082019050919050565b6000610839600083610927565b915061084482610d14565b600082019050919050565b600061085c601683610932565b915061086782610d17565b602082019050919050565b61087b81610b8b565b82525050565b600061088c8261082c565b9150819050919050565b60006020820190506108ab60008301846107eb565b92915050565b60006020820190506108c660008301846107fa565b92915050565b600060208201905081810360008301526108e581610809565b9050919050565b600060208201905081810360008301526109058161084f565b9050919050565b60006020820190506109216000830184610872565b92915050565b600081905092915050565b600082825260208201905092915050565b600061094e82610b61565b915061095983610b61565b92508261096957610968610c59565b5b600160000383147f8000000000000000000000000000000000000000000000000000000000000000831416156109a2576109a1610c2a565b5b828205905092915050565b60006109b882610b8b565b91506109c383610b8b565b9250826109d3576109d2610c59565b5b828204905092915050565b60006109e982610b61565b91506109f483610b61565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610a3357610a32610c2a565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610a7057610a6f610c2a565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610aad57610aac610c2a565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610aea57610ae9610c2a565b5b828202905092915050565b6000610b0082610b8b565b9150610b0b83610b8b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4457610b43610c2a565b5b828202905092915050565b6000610b5a82610b6b565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610bb682610bbd565b9050919050565b6000610bc882610bcf565b9050919050565b6000610bda82610b6b565b9050919050565b6000610bec82610b8b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c1f57610c1e610c2a565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f5478206661696c65640000000000000000000000000000000000000000000000600082015250565b50565b7f5265717569726564206d696e696d756d20313055736400000000000000000000600082015250565b610d4981610b4f565b8114610d5457600080fd5b50565b610d6081610b61565b8114610d6b57600080fd5b50565b610d7781610b8b565b8114610d8257600080fd5b50565b610d8e81610b95565b8114610d9957600080fd5b5056fea26469706673582212202901e9a8052cb41a2dfe8e00b50ed4037df01afae37bd2fc63760bde50c0c19e64736f6c63430008070033",
  "devdoc": {
    "author": "SAc",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A conytract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "THis function funds this contract"
      }
    },
    "notice": "demo sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "adressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUsd",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}